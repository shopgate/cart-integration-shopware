name: Run tests, dependency audit, CS fixer & deploy
on: [push]
jobs:
  check:
    name: Audit & code style checks
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
      - name: Install dependencies (for CS fixer)
        run: composer install
      - name: Audit
        run: |
          curl -L https://github.com/fabpot/local-php-security-checker/releases/download/v1.0.0/local-php-security-checker_1.0.0_linux_amd64 -o php-dependency-checker
          chmod +x ./php-dependency-checker
          ./php-dependency-checker
          rm php-dependency-checker
      - name: Code Style
        run: composer check

  test:
    name: Unit tests on PHP ${{ matrix.php-versions }}
    needs: [ check ]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php-versions: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1' ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Install dependencies
        run: composer install
      - name: Test
        run: composer test

  build-zip-php-5:
    name: Build the PHP 5.6 compatible ZIP
    needs: [check, test]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/') # only tags
    steps:
      - name: Get tag name
        id: set-tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF:10}
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 5.6
      - name: Build ZIP
        run: ./release/build_release_package.sh
        env:
          TAG_NAME: ${{ steps.set-tag.outputs.TAG_NAME }}
          PHP_VERSION: 'php-5.6'
      - name: Store to cache
        uses: actions/cache@v2
        with:
          path: ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-5.6.zip
          key: ${{ steps.set-tag.outputs.TAG_NAME }}-php-5

#      - name: Create GitHub release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Shopgate Cart Integration Shopware 5 ${{ github.ref }}
#          draft: true
#      - name: Upload ZIP to GitHub release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-5.6.zip
#          asset_name: shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-5.6.zip
#          asset_content_type: application/zip

  build-zip-php-7:
    name: Build the PHP 7 & 8 compatible ZIP
    needs: [check, test]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/') # only tags
    steps:
      - name: Get tag name
        id: set-tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF:10}
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.0
      - name: Build ZIP
        run: ./release/build_release_package.sh
        env:
          TAG_NAME: ${{ steps.set-tag.outputs.TAG_NAME }}
          PHP_VERSION: 'php-7'
      - name: Store to cache
        uses: actions/cache@v2
        with:
          path: ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-7.zip
          key: ${{ steps.set-tag.outputs.TAG_NAME }}-php-7

#      - name: Create GitHub release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Shopgate Cart Integration Shopware 5 ${{ github.ref }}
#          draft: true
#      - name: Upload ZIP to GitHub release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-7.zip
#          asset_name: shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-7.zip
#          asset_content_type: application/zip

  release:
    name: Create GitHub release & attach ZIP files
    needs: [build-zip-php-5, build-zip-php-7]
    if: startsWith(github.ref, 'refs/tags/') # only tags
    runs-on: ubuntu-20.04
    steps:
      - name: Get tag name
        id: set-tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF:10}
      - name: Load from cache (PHP 5)
        uses: actions/cache@v2
        with:
          key: ${{ steps.set-tag.outputs.TAG_NAME }}-php-5
          path: ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-5.6.zip
      - name: Load from cache (PHP 7 & 8)
        uses: actions/cache@v2
        with:
          key: ${{ steps.set-tag.outputs.TAG_NAME }}-php-7
          path: ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-7.zip
      - name: Release & upload
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set-tag.outputs.TAG_NAME }}
          name: Shopgate Cart Integration Shopware 5 ${{ steps.set-tag.outputs.TAG_NAME }}
          fail_on_unmatched_files: true
          files: |
            ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-5.6.zip
            ./release/shopgate-shopware-integration-${{ steps.set-tag.outputs.TAG_NAME }}-php-7.zip

  notify-release-success:
    name: Notify developers of new release
    needs: [release]
    runs-on: ubuntu-20.04
    if: |
      success() &&
      startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get tag name
        id: set-tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF:10}
      - name: Notify on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_MERCHANT_UNIT }}
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':octocat:'
          SLACK_TITLE: New release for ${{ github.repository }}
          SLACK_MESSAGE: Released version ${{ steps.set-tag.outputs.TAG_NAME }} of ${{ github.repository }}

  notify-release-fail:
    name: Notify developers of failed release
    needs: [release]
    runs-on: ubuntu-20.04
    if: |
      failure() &&
      startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get tag name
        id: set-tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF:10}
      - name: Notify on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_MERCHANT_UNIT }}
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':octocat:'
          SLACK_COLOR: '#A30200'
          SLACK_TITLE: Release failed for ${{ github.repository }}
          SLACK_MESSAGE: Release failed for version ${{ steps.set-tag.outputs.TAG_NAME }} of ${{ github.repository }}
